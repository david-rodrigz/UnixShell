#!/bin/bash

# set the program name
prg=./try

# declare an array of test names
declare -a test_names=(
    "Test_pwd"
    "Test_sleep"
)

# declare a function for each test

# pwd test
run_Test_pwd() {
    # set input value
    echo "pwd" >$1/inp

    # set expected value
    pwd >$1/exp
    
    # run the program with the input redirected from the inp file
    # redirect the output to the out file
    $prg <$1/inp 2>&1 >$1/out
}

# sleep test
run_Test_sleep() {
    # set input value
    echo "sleep 5 ; exit" >$1/inp

    # set expected value
    echo "" >$1/exp

    # capture the start time
    start_time=$(date +%s)

    # run the program with the input redirected from the inp file
    $prg <$1/inp 2>&1 >$1/out

    # capture the end time
    end_time=$(date +%s)

    # calculate the difference in seconds
    seconds_passed=$((end_time - start_time))

    # extract sleep time from inp file
    sec=$(grep -oP '(?<=sleep )\d+' $1/inp | cut -f1 -d' ')

    # compare seconds_passed with the expected value
    # if not equal, redirect error message to out file
    if [ $seconds_passed -ne $sec ]; then
        echo "$1 failed: Expected $sec seconds, but got $seconds_passed seconds" 2>&1 >>$1/out
    else
        echo "" >$1/exp
    fi
}

# run each test
for t in ${test_names[@]}; do
    # make directory for the test if it doesn't exist
    mkdir -p Test/$t

    # echo the test name
    echo $t

    # run the test
    run_${t} "Test/$t"

    # compare the output with the expected output
    if diff -q -w Test/$t/exp Test/$t/out 2>&1 >/dev/null; then
        echo "PASSED"
    else
        echo "FAILED" >&2
    fi
    echo ""
done